.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Atom 3"
.TH Atom 3 "2020-06-20" "perl v5.26.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Slash::XML::Atom \- Perl extension for Slash
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&        use Slash::XML;
\&        xmlDisplay(%data);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\s-1LONG DESCRIPTION.\s0
.SH "EXPORTED FUNCTIONS"
.IX Header "EXPORTED FUNCTIONS"
.SS "create(\s-1PARAM\s0)"
.IX Subsection "create(PARAM)"
Creates Atom feed.
.IP "Parameters" 4
.IX Item "Parameters"
.RS 4
.PD 0
.IP "\s-1PARAM\s0" 4
.IX Item "PARAM"
.PD
Hashref of parameters.  Currently supported options are below.
.RS 4
.IP "version" 4
.IX Item "version"
Defaults to \*(L"1.0\*(R".
.IP "rdfencoding" 4
.IX Item "rdfencoding"
Defaults to \*(L"rdfencoding\*(R" in vars.
.IP "title" 4
.IX Item "title"
Defaults to \*(L"sitename\*(R" in vars.
.IP "description" 4
.IX Item "description"
Defaults to \*(L"slogan\*(R" in vars.
.IP "link" 4
.IX Item "link"
Defaults to \*(L"absolutedir\*(R" in vars.
.IP "date" 4
.IX Item "date"
Defaults to current date.  See \fBdate2iso8601()\fR.
.IP "subject" 4
.IX Item "subject"
Defaults to \*(L"rdfsubject\*(R" in vars.
.IP "language" 4
.IX Item "language"
Defaults to \*(L"rdflanguage\*(R" in vars.
.IP "creator" 4
.IX Item "creator"
Defaults to \*(L"adminmail\*(R" in vars.
.IP "publisher" 4
.IX Item "publisher"
Defaults to \*(L"rdfpublisher\*(R" in vars.
.IP "rights" 4
.IX Item "rights"
Defaults to \*(L"rdfrights\*(R" in vars.
.IP "updatePeriod" 4
.IX Item "updatePeriod"
Defaults to \*(L"rdfupdateperiod\*(R" in vars.
.IP "updateFrequency" 4
.IX Item "updateFrequency"
Defaults to \*(L"rdfupdatefrequency\*(R" in vars.
.IP "updateBase" 4
.IX Item "updateBase"
Defaults to \*(L"rdfupdatebase\*(R" in vars.
.IP "image" 4
.IX Item "image"
If scalar, then just prints the default image data if scalar is true.
If hashref, then may have \*(L"title\*(R", \*(L"url\*(R", and \*(L"link\*(R" passed.
.IP "textinput" 4
.IX Item "textinput"
If scalar, then just prints the default textinput data if scalar is true.
If hashref, then may have \*(L"title\*(R", \*(L"description\*(R", \*(L"name\*(R", and \*(L"link\*(R" passed.
.IP "items" 4
.IX Item "items"
An arrayref of hashrefs.  If the \*(L"story\*(R" key of the hashref is true,
then the item is passed to \fBrss_story()\fR.  Otherwise, \*(L"title\*(R" and \*(L"link\*(R" must
be defined keys, and any other single-level key may be defined
(no multiple level hash keys).
.RE
.RS 4
.RE
.RE
.RS 4
.RE
.IP "Return value" 4
.IX Item "Return value"
The complete \s-1RSS\s0 data as a string.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBSlash\fR\|(3), \fBSlash::XML\fR\|(3).
